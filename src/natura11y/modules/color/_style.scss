/*

In this file:

// A. Modules
// B. Variables
// C. Color Utilities
// D. Default Body Theme

*/

//////////////////////////////////////////////
// A. Modules
//////////////////////////////////////////////

@use "sass:map";
@use "../breakpoints/style" as breakpoints;

//////////////////////////////////////////////
// B. Variables
//////////////////////////////////////////////

// Scoped to Root

:root {

    // Theme Color Palette

    --primary: #440381;
    --light: #fff;

    --light: #F5F5F5;
    --dark: #181818;

    // Accessible Link Color
    
    --a11y-link: #0066cc;

    // Primary Correlated Colors

    --primary-text: white;
    --primary-border: hsla(0, 0%, 0%, 0.25);
    --primary-link: currentColor;
    --primary-confirm: #16db93;
    --primary-warn: #ff73aa;

    // Canvas Correlated Colors

    --canvas: var(--light);
    --canvas-text: var(--dark);
    --canvas-border: hsla(0, 0%, 50%, 0.25);
    --canvas-link: var(--a11y-link);
    --canvas-confirm: #008237;
    --canvas-warn: #e4193c;
}

$theme-colors: (
 
    "primary": (
        swatch: var(--primary),
        text: var(--primary-text),
        border: var(--primary-border),
        link: var(--primary-link),
        confirm: var(--primary-confirm),
        warn: var(--primary-warn)
    ), 

    "canvas": (
        swatch: var(--canvas),
        text: var(--canvas-text),
        border: var(--canvas-border),
        link: var(--canvas-link),
        confirm: var(--canvas-confirm),
        warn: var(--canvas-warn)
    )
    
);

//////////////////////////////////////////////
// C. Color Utilities 
//////////////////////////////////////////////

body:not([class*="theme-"]),
body > footer:not([class*="theme-"]),
[class*="theme-"],
[data-mode] {
    background-color: var(--background-color);

    color: var(--text-color);
    
    border-color: var(--border-color) !important;

    * {
        &:not([class*="theme-"]):not(textarea):not(select):not(footer) {
            border-color: inherit;
        }
    }

    td > a, 
    .td-content > a,
    p > a:not([class*="text-"]),
    .text-color-link {
        color: var(--link-color);
    }

    select option,
    [data-toggle="dropdown"] ~ ul,
    .modal__content,
    .table-scroll__container::after {
        background-color: var(--background-color);
    }
    
    [data-toggle="dropdown"][class*="-icon"] ~ ul::before{
        color: var(--border-color);
    }

    [data-toggle="dropdown"][class*="-icon"] ~ ul::after {
        color: var(--background-color);
    }

    // Alerts

    .alert--confirm {
        color: var(--confirm-color);
    }

    .alert--confirm--inverse {
        background-color: var(--confirm-color);

        color: var(--background-color);
    }
    
    .alert--warn,
    .required-indicator [class*="icon"],
    .form-entry__field__label::before,
    .form-entry__field__label::after,
    .is-invalid .form-entry__feedback, 
    .is-invalid .form-entry__field__input::after,
    .is-invalid .form-entry__field__select::after,
    .is-invalid [class*="icon-warn"],
    .is-invalid .form-entry__option {
        color: var(--warn-color);
    }

    .alert--warn--inverse {
        background-color: var(--warn-color);

        color: var(--background-color);
    }

    // Gradient Veneer

    [class*="gradient-veneer"] {
        --gradient-color: var(--background-color);
    }
}

@each $breakpoint in map.keys(breakpoints.$breakpoints) {
    @include breakpoints.breakpoints-up($breakpoint) {
        $mod: breakpoints.breakpoint-modifier($breakpoint, breakpoints.$breakpoints);

        @each $name, $color-map in $theme-colors {
            $swatch: map.get($color-map, "swatch");
            $text: map.get($color-map, "text");
            $border: map.get($color-map, "border");
            $link: map.get($color-map, "link");

            $confirm: map.get($color-map, "confirm");
            $warn: map.get($color-map, "warn");

            .theme-#{$name}#{$mod} {
                --background-color: #{$swatch};
                --text-color: #{$text};
                --border-color: #{$border};
                --link-color: #{$link};
                --confirm-color: #{$confirm};
                --warn-color: #{$warn};
            }

            .background-color-#{$name}#{$mod}{
                --background-color: #{$swatch};
                background-color: var(--background-color) !important;
            }

            .text-color-#{$name}#{$mod}{
                --text-color: #{$swatch};
                color: var(--text-color) !important;
            }

        }

    }
}

//////////////////////////////////////////////
// D. Wayfinding 
//////////////////////////////////////////////


@each $name, $color-map in $theme-colors {
    $swatch: map.get($color-map, "swatch");
    $text: map.get($color-map, "text");
    $border: map.get($color-map, "border");

    [data-active-theme="#{$name}"] {

        [aria-current],
        [aria-current] + .nav__dropdown,
        [aria-expanded="true"] {
            --background-color: #{$swatch} !important;
            --text-color: #{$text} !important;
            --border-color: #{$border} !important;
        }
    }

    [data-active-color="#{$name}"] {
        
        [aria-current],
        [aria-expanded="true"] {
            --text-color: #{$swatch};
            color: var(--text-color) !important;
        }

    }

}

//////////////////////////////////////////////
// D. Wayfinding 
//////////////////////////////////////////////

[data-mode="dark"]{
    --canvas: var(--dark) ;
    --canvas-text: var(--light);
    --canvas-border: hsla(0, 0%, 50%, 0.25);
    --canvas-link: var(--a11y-link);
    --canvas-confirm: #008237;
    --canvas-warn: #e4193c;
}